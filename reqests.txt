CREATE TABLE users(
	id int PRIMARY KEY,
	name varchar(40) UNIQUE,
	user_role varchar(10)
	);

CREATE TABLE products(
	id int PRIMARY KEY,
	name varchar(40),
	price int,
	category varchar(20),
	prouductOwner int,
	FOREIGN KEY (productOwner) REFERENCES users(id)
	);
	
CREATE TABLE offers(
	id int PRIMARY KEY,
	price int,
	offer_status varchar(20)
	);
	
CREATE TABLE offer_product(
	offer_id int,
	product_id int,
	FOREIGN KEY (product_id) REFERENCES products(id),
	FOREIGN KEY (offer_id) REFERENCES offers(id)
	);
	
INSERT INTO offers VALUES 
(1, 10000, 'OPEN'),
(2, 17312, 'DONE'),
(3, 5000, 'IN PROGRES');

INSERT INTO offer_product VALUES
(1, 1),
(2, 2),
(3, 3);
	
ALTER TABLE users ADD age int;

INSERT INTO users VALUES
(1, 'Oleg', 'ADMIN', 21),
(2, 'Bogdan', 'USER', 24),
(3, 'John', 'USER', 30);

INSERT INTO product VALUES
(1, 'Smartphone', 10000, 'TECH', 1),
(2, 'Laptop', 120000, 'TECH', 2),
(3, 'Jacket', 3000, 'Clothes', 3);

UPDATE users SET age = 31 WHERE id = 1;

INSERT INTO users VALUES 
(4, 'Test', 'USER', 12);

DELETE FROM users 
WHERE id =4;

INSERT INTO users VALUES
(5, 'User', 'USER', 18);

SELECT * FROM products;

SELECT name, price FROM products;

SELECT name, price
FROM products 
WHERE price BETWEEN 10000 AND 150000;

SELECT *
FROM products p
INNER JOIN users u ON u.id- p.productOwner;

SELECT *
FROM products p
FULL JOIN users u ON u.id = p.productOwner;

SELECT *
FROM products p
RIGHT JOIN users u ON u.id = p.productOwner;

SELECT *
FROM products p
LEFT JOIN users u ON u.id = p.productOwner;

SELECT *
FROM offer_product op
INNER JOIN offers o ON o.id = op.offer_id
INNER join products p ON p.id = op.product_id;	

CREATE TABLE userss AS TABLE users;

START TRANSACTION;
DECLARE cursor1 CURSOR FOR SELECT * FROM users;
FETCH FORWARD FROM cursor1;
COMMIT;

START TRANSACTION;
DECLARE cursor1 CURSOR FOR SELECT * FROM users;
MOVE FORWARD FROM cursor1;
UPDATE users SET name = 'Changed by cursor)' WHERE CURRENT 	of cursor1;
COMMIT;
